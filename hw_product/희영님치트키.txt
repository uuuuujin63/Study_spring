1. 처음에 프로젝트 오른쪽마우스 프로퍼티 페이셋 자바 1.8이랑 다이나맥 웹모듈 4.0
2. 타겟의 pom.xml 에서 자바 버전 1.8 스프링프레임워크 버전 5.3.9 하고 저장
3. web.xml 파일에 post 방식의 한글 처리 추가 필터설정 필터맵핑까지 추가 여기서 프로젝트 돌아가는지 확인
자바에서 가져올때 웹컨텐트 밑에 에러, 게스트북 인클루드, 유저, 인덱스.jsp 가져와
이걸 웹 INF에 있는 views 밑에 가져가 그럼 에러가 뜬다.
그다음 자바파일 소스에 있는 얘들 차례로 만들어줄거다.
일단 서비스 두개를 만들고 디티오 두개 만든다.
4. 임포트 시킬때 컨트롤 쉬프트 알파벳 o
이제 멤버 서비스 임플 만든다.
서비스 만들면 바로 @Service 만들어.
이제 게스트북 서비스 임플만들고 똑같이 @Service 만들어
이제 Dao 만들어야한다. 자바에서 그대로 복사해서 넣어
또 컨트롤 쉬프트 오
Dao 임플도 만들고 임플 만들자 마자 @Repository만들어준다.

5. 디비.유틸에서 겟커넥션 부분을 뺸다. 이유는 스프링에서 해주니까.
루트 콘텍스트에 빈 추가
오류나면 폼.xml 열고 스프링 mvn 레포지토리 가서 spring 검색하고 spring jdbc 복사붙여넣기
6. Impl에서 싱글톤 부분 뺴고 @autosired data souce 라는걸 추가. 이유는 스프링에서 해주니까
7. 6번 바꿔주고 datasouce.getconnetion으로 아래 메서드 다 바꿔주기.
8. 뷰에 가져온것들 인클루드 경로 바꿔주기 모든 jsp 에 적용하기
9. 폼.xml에 mvnrepository에서 mysql가져오기
10. 메인 컨트롤러에 인덱스 페이지 뜨게 만들어주기.
11. 경로에 resources 뺴기 위해 web-inf 안의 spring안의 appservlet의 servlet-context.xml
파일에서 리소시스 맵핑 부분을 추가해주기.
12. 멤버 컨트롤러 만들고 @컨트롤러 추가하기
13. 만들자 마자 @오토와이어드 서비스 넣어버리기
14. 예전 act가 매핑이 된거다.
15. 공통된 부분을 @Requestmappint("/user")로 빼내기
16. 같은 이름을 쓰지만 겟방식이냐 포스트 방식이냐에 따라 다른 페이지로
17. 데이터 베이스 연결할때는  webinf 아래 rootcontext.xml에서 jndiname을 이용한다
18. 멤버 컨트롤러 들어가서 @postmapping register 부분에서 모델엔 뷰 추가 모델은
request처럼 담는거고 뷰는 화면에 뿌리는 jsp니까 이거사용
19. 18번에서 트라이안에 로그인.jsp를 리다이랙트로 넣어줘야한다. 안그러면 회원가입후
로그인창에서 새로고침하면 같은 아이디로 회원가입을 하게되어 오류가 뜬다.
20. 여기까지 회원가입이였고 이제부터 로그인 부분
--------------------------------------------
21. 로그인..jsp에서 인풋 히든 필요없으니까 지우고 else에 있는 ${root}/user/에 login추가
22. 이제 멤버 컨트롤러에서 로그인을 겟매핑이아니라 포스트 매핑으로 준다.
23. memberdao 의 login 을 다 Map<String, String> map으로 바꿈, 멤버 서비스쪽도다
24. 포스트매핑의 login에서 map을 다음페이지로 넘겨주는 용도가 아니라 넘어온느 파라미터를
받는 용도로 사용하고 싶다는 걸 알려주기 위해 맵 앞에 @RequestParam을 붙인다.
이게 없으면 모델에다 담아서 여기로 가라 이렇게쓰인다.
25. 로그인 인자값에 HttpSession session을 넣으면 스프링에서 자동으로 session 생성
26. 쿠키.setPath 에서 / 쓰는 이유는 전체 프로젝트 안에서 쿠키를 사용한다는 뜻이다.
27. redirct:/ 슬래쉬하면 메인컨트롤러에서 받게되고 index로 이동시킴

----이제 로그인 부분 끝내고 글 목록 부분
28. index.jsp 의 글목록 링크수정, 리스트에서 넘길때 pg를 넘길거다. 페이지번호와 또 뭘 보내야하나
키랑 워드 보내줘야한다. 키가 색할 조건 워드가 검색어~!!
29. GuestBookController에서 페이지와 키와 워드를 받을 수 있는 DTO가 없잖아? 그래서 맵을 쓰는거다
30. spp 에 뭐가 들어있으면 spp 에 10을 넣는다. 이게 페이지당 글갯수이다.
31. 서브젝트일때 그 안에 포함된거만 찾는다.

--이제 글 작성 부분
32. list.jsp 에서 레지스터btn 누르면 레지스터 찾아가야한다.
33. 글작성을 다햇을때는 post방식으로 register로 들어간다.
34. 아이디를 가져오기 위해선 session이 필요 세션에서 가져와서 멤버 디티오를 넣는다.
35. 북 아이디에 멤버 디티오에서 가져온 아이디를 넣는다.
36. 게스트북 서비스에서 레지스터 아티클을 넣는다. 근데 리스트에 가져갈게 잇다. 페이지 키 워드

--글 수정 modify 부분
37. 모디파이에 @requestParam으로 articleno를 받음. 이부분은 리퀘스트파람안의 철자가 
달라서 이렇게함
38. 리스트에 있는 쪽에서 articles 에 리스트를 넣어주고 이걸 modify.jsp에서 받아와서
쓰는것임

--글삭제부분
39. 겟매핑으로 딜리트 받음.












1. aop 쓰려면 src main webapp webinf spring appservlet root_context.xml 로 가서
namespaces 에서 aop 체크



pom.xml = mvn레퍼지토리
web.xml = 톰캣한테 나는 이렇게 쓸거야 라는걸 알려주는거지, dispatcher 하는거
root-context.xml = 
servlet-context.xml